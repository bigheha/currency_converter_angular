{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../get-quotes.service\";\nexport let CurrenciesWindowComponent = /*#__PURE__*/(() => {\n  class CurrenciesWindowComponent {\n    constructor(GetQuotesService) {\n      this.GetQuotesService = GetQuotesService;\n      this.currenciesData = {};\n      this.currency1code = 'USD';\n      this.currency2code = 'UAH';\n      this.currency1rate = 0;\n      this.currency2rate = 0;\n      this.currency1amount = 0;\n      this.currency2amount = 0;\n    }\n    ngOnInit() {\n      this.GetQuotesService.getData().subscribe(data => {\n        this.currenciesData = data;\n      });\n    }\n    setCode1(code) {\n      this.currency1code = code.value;\n      this.convert1(this.currency1amount);\n    }\n    setCode2(code) {\n      this.currency2code = code.value;\n      this.convert2(this.currency2amount);\n    }\n    convert1(target) {\n      this.currency1rate = this.currenciesData.data[this.currency1code].value;\n      this.currency2rate = this.currenciesData.data[this.currency2code].value;\n      const rate = this.currency2rate / this.currency1rate;\n      if (typeof target === 'number') {\n        this.currency1amount = target;\n      } else if (typeof target === 'string') {\n        this.currency1amount = parseInt(target);\n      } else {\n        this.currency1amount = target.value;\n      }\n      this.currency2amount = parseFloat((this.currency1amount * rate).toFixed(2));\n    }\n    convert2(target) {\n      this.currency1rate = this.currenciesData.data[this.currency1code].value;\n      this.currency2rate = this.currenciesData.data[this.currency2code].value;\n      const rate = this.currency1rate / this.currency2rate;\n      if (typeof target === 'number') {\n        this.currency2amount = target;\n      } else if (typeof target === 'string') {\n        this.currency2amount = parseFloat(target);\n      } else {\n        this.currency2amount = target.value;\n      }\n      this.currency1amount = parseFloat((this.currency2amount * rate).toFixed(2));\n    }\n  }\n  CurrenciesWindowComponent.ɵfac = function CurrenciesWindowComponent_Factory(t) {\n    return new (t || CurrenciesWindowComponent)(i0.ɵɵdirectiveInject(i1.GetQuotesService));\n  };\n  CurrenciesWindowComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: CurrenciesWindowComponent,\n    selectors: [[\"app-currencies-window\"]],\n    decls: 22,\n    vars: 2,\n    consts: [[1, \"converter-grid\"], [1, \"converter-body\"], [1, \"converter\"], [1, \"inputs\"], [\"type\", \"number\", 3, \"value\", \"input\"], [\"name\", \"cur1Code\", \"id\", \"cur1Id\", \"required\", \"\", 3, \"change\"], [\"value\", \"UAH\"], [\"value\", \"EUR\"], [\"value\", \"USD\", \"selected\", \"\"], [\"name\", \"cur2code\", \"id\", \"cur2id\", \"required\", \"\", 3, \"change\"], [\"value\", \"UAH\", \"selected\", \"\"], [\"value\", \"USD\"]],\n    template: function CurrenciesWindowComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"div\", 3)(4, \"div\")(5, \"input\", 4);\n        i0.ɵɵlistener(\"input\", function CurrenciesWindowComponent_Template_input_input_5_listener($event) {\n          return ctx.convert1($event.target);\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(6, \"select\", 5);\n        i0.ɵɵlistener(\"change\", function CurrenciesWindowComponent_Template_select_change_6_listener($event) {\n          return ctx.setCode1($event.target);\n        });\n        i0.ɵɵelementStart(7, \"option\", 6);\n        i0.ɵɵtext(8, \"UAH\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(9, \"option\", 7);\n        i0.ɵɵtext(10, \"EUR\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(11, \"option\", 8);\n        i0.ɵɵtext(12, \"USD\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(13, \"div\")(14, \"input\", 4);\n        i0.ɵɵlistener(\"input\", function CurrenciesWindowComponent_Template_input_input_14_listener($event) {\n          return ctx.convert2($event.target);\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(15, \"select\", 9);\n        i0.ɵɵlistener(\"change\", function CurrenciesWindowComponent_Template_select_change_15_listener($event) {\n          return ctx.setCode2($event.target);\n        });\n        i0.ɵɵelementStart(16, \"option\", 10);\n        i0.ɵɵtext(17, \"UAH\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(18, \"option\", 7);\n        i0.ɵɵtext(19, \"EUR\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(20, \"option\", 11);\n        i0.ɵɵtext(21, \"USD\");\n        i0.ɵɵelementEnd()()()()()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(5);\n        i0.ɵɵpropertyInterpolate(\"value\", ctx.currency1amount);\n        i0.ɵɵadvance(9);\n        i0.ɵɵpropertyInterpolate(\"value\", ctx.currency2amount);\n      }\n    },\n    styles: [\".converter-grid[_ngcontent-%COMP%]{display:grid;height:100%;background-image:url(1558247.9e773d0aca6269c8.jpg);grid-template-rows:15% 70% 15%;grid-template-columns:30% max(40%,275px) 30%}.converter-body[_ngcontent-%COMP%]{display:flex;flex-direction:column;align-items:center;justify-content:center;background-color:#ffffffbf;grid-row:2/3;grid-column:2/3;border-radius:30px;box-shadow:0 0 10px 10px gray}.converter[_ngcontent-%COMP%]{display:flex;flex-direction:column;background-color:#fff;width:100%;align-items:center}.inputs[_ngcontent-%COMP%]{display:flex;flex-direction:column;align-items:center;margin:20px 0}input[_ngcontent-%COMP%]{margin:10px 20px;font-size:20px}select[_ngcontent-%COMP%]{font-size:20px}@media all and (max-width: 675px){.converter-grid[_ngcontent-%COMP%]{grid-template-columns:100%}.converter-body[_ngcontent-%COMP%]{grid-column:1/2;border-radius:0}}\"]\n  });\n  return CurrenciesWindowComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}